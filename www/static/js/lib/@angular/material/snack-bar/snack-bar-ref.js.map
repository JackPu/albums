{"version":3,"sources":["snack-bar/snack-bar-ref.ts"],"names":[],"mappings":"OAEO,EAAC,OAAO,EAAC,MAAM,cAAc;AAEpC,sDAAsD;AAGtD;;GAEG;AACH;IAOE,uBAAY,QAAW,EAAU,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAHxD,oEAAoE;QAC5D,iBAAY,GAAiB,IAAI,OAAO,EAAE,CAAC;QAGjD,iEAAiE;QACjE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,+BAA+B;IAC/B,+BAAO,GAAP;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC/B,CAAC;IACH,CAAC;IAED,kFAAkF;IAClF,sCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IAC1C,CAAC;IACH,oBAAC;AAAD,CAxBA,AAwBC,IAAA","file":"snack-bar/snack-bar-ref.js","sourcesContent":["import {OverlayRef} from '../core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\n// TODO(josephperrott): Implement onAction observable.\n\n\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nexport class MdSnackBarRef<T> {\n  /** The instance of the component making up the content of the snack bar. */\n  readonly instance: T;\n\n  /** Subject for notifying the user that the snack bar has closed. */\n  private _afterClosed: Subject<any> = new Subject();\n\n  constructor(instance: T, private _overlayRef: OverlayRef) {\n    // Sets the readonly instance of the snack bar content component.\n    this.instance = instance;\n  }\n\n  /** Dismisses the snack bar. */\n  dismiss(): void {\n    if (!this._afterClosed.closed) {\n      this._overlayRef.dispose();\n      this._afterClosed.complete();\n    }\n  }\n\n  /** Gets an observable that is notified when the snack bar is finished closing. */\n  afterDismissed(): Observable<void> {\n    return this._afterClosed.asObservable();\n  }\n}\n"],"sourceRoot":"/source/"}