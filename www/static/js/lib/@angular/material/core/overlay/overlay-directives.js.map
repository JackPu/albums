{"version":3,"sources":["core/overlay/overlay-directives.ts"],"names":[],"mappings":"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","file":"core/overlay/overlay-directives.js","sourcesContent":["import {\n    NgModule,\n    ModuleWithProviders,\n    Directive,\n    TemplateRef,\n    ViewContainerRef,\n    OnInit,\n    Input,\n    OnDestroy,\n    ElementRef\n} from '@angular/core';\nimport {Overlay, OVERLAY_PROVIDERS} from './overlay';\nimport {OverlayRef} from './overlay-ref';\nimport {TemplatePortal} from '../portal/portal';\nimport {OverlayState} from './overlay-state';\nimport {ConnectionPositionPair} from './position/connected-position';\nimport {PortalModule} from '../portal/portal-directives';\n\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nlet defaultPositionList = [\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'bottom'},\n      {overlayX: 'start', overlayY: 'top'}),\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'top'},\n      {overlayX: 'start', overlayY: 'bottom'}),\n];\n\n\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[overlay-origin]',\n  exportAs: 'overlayOrigin',\n})\nexport class OverlayOrigin {\n  constructor(private _elementRef: ElementRef) { }\n\n  get elementRef() {\n    return this._elementRef;\n  }\n}\n\n\n\n/**\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[connected-overlay]'\n})\nexport class ConnectedOverlayDirective implements OnInit, OnDestroy {\n  private _overlayRef: OverlayRef;\n  private _templatePortal: TemplatePortal;\n\n  @Input() origin: OverlayOrigin;\n  @Input() positions: ConnectionPositionPair[];\n\n  // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n\n  constructor(\n      private _overlay: Overlay,\n      templateRef: TemplateRef<any>,\n      viewContainerRef: ViewContainerRef) {\n    this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n  }\n\n  get overlayRef() {\n    return this._overlayRef;\n  }\n\n  /** TODO: internal */\n  ngOnInit() {\n    this._createOverlay();\n  }\n\n  /** TODO: internal */\n  ngOnDestroy() {\n    this._destroyOverlay();\n  }\n\n  /** Creates an overlay and attaches this directive's template to it. */\n  private _createOverlay() {\n    if (!this.positions || !this.positions.length) {\n      this.positions = defaultPositionList;\n    }\n\n    let overlayConfig = new OverlayState();\n    overlayConfig.positionStrategy =\n        this._overlay.position().connectedTo(\n            this.origin.elementRef,\n            {originX: this.positions[0].overlayX, originY: this.positions[0].originY},\n            {overlayX: this.positions[0].overlayX, overlayY: this.positions[0].overlayY});\n\n    this._overlayRef = this._overlay.create(overlayConfig);\n    this._overlayRef.attach(this._templatePortal);\n  }\n\n  /** Destroys the overlay created by this directive. */\n  private _destroyOverlay() {\n    this._overlayRef.dispose();\n  }\n}\n\n\n@NgModule({\n  imports: [PortalModule],\n  exports: [ConnectedOverlayDirective, OverlayOrigin],\n  declarations: [ConnectedOverlayDirective, OverlayOrigin],\n})\nexport class OverlayModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: OverlayModule,\n      providers: OVERLAY_PROVIDERS,\n    };\n  }\n}\n"],"sourceRoot":"/source/"}