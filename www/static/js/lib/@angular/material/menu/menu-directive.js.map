{"version":3,"sources":["menu/menu-directive.ts"],"names":[],"mappings":"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","file":"menu/menu-directive.js","sourcesContent":["// TODO(kara): prevent-close functionality\n\nimport {\n  Attribute,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {MdMenuInvalidPositionX, MdMenuInvalidPositionY} from './menu-errors';\nimport {MdMenuItem} from './menu-item';\nimport {UP_ARROW, DOWN_ARROW, TAB} from '../core';\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-menu',\n  host: {'role': 'menu'},\n  templateUrl: 'menu.html',\n  styleUrls: ['menu.css'],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'mdMenu'\n})\nexport class MdMenu {\n  _showClickCatcher: boolean = false;\n  private _focusedItemIndex: number = 0;\n\n  // config object to be passed into the menu's ngClass\n  _classList: Object;\n\n  positionX: MenuPositionX = 'after';\n  positionY: MenuPositionY = 'below';\n\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @ContentChildren(MdMenuItem) items: QueryList<MdMenuItem>;\n\n  constructor(@Attribute('x-position') posX: MenuPositionX,\n              @Attribute('y-position') posY: MenuPositionY) {\n    if (posX) { this._setPositionX(posX); }\n    if (posY) { this._setPositionY(posY); }\n  }\n\n  /**\n   * This method takes classes set on the host md-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param classes list of class names\n   */\n  @Input('class')\n  set classList(classes: string) {\n    this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n      obj[className] = true;\n      return obj;\n    }, {});\n  }\n\n  @Output() close = new EventEmitter;\n\n  /**\n   * This function toggles the display of the menu's click catcher element.\n   * This element covers the viewport when the menu is open to detect clicks outside the menu.\n   * TODO: internal\n   */\n  _setClickCatcher(bool: boolean): void {\n    this._showClickCatcher = bool;\n  }\n\n  /**\n   * Focus the first item in the menu. This method is used by the menu trigger\n   * to focus the first item when the menu is opened by the ENTER key.\n   * TODO: internal\n   */\n  _focusFirstItem() {\n    this.items.first.focus();\n  }\n\n  // TODO(kara): update this when (keydown.downArrow) testability is fixed\n  // TODO: internal\n  _handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === DOWN_ARROW) {\n      this._focusNextItem();\n    } else if (event.keyCode === UP_ARROW) {\n      this._focusPreviousItem();\n    } else if (event.keyCode === TAB) {\n      this._emitCloseEvent();\n    }\n  }\n\n  /**\n   * This emits a close event to which the trigger is subscribed. When emitted, the\n   * trigger will close the menu.\n   */\n  private _emitCloseEvent(): void {\n    this._focusedItemIndex = 0;\n    this.close.emit(null);\n  }\n\n  private _focusNextItem(): void {\n    this._updateFocusedItemIndex(1);\n    this.items.toArray()[this._focusedItemIndex].focus();\n  }\n\n  private _focusPreviousItem(): void {\n    this._updateFocusedItemIndex(-1);\n    this.items.toArray()[this._focusedItemIndex].focus();\n  }\n\n  /**\n   * This method sets focus to the correct menu item, given a list of menu items and the delta\n   * between the currently focused menu item and the new menu item to be focused. It will\n   * continue to move down the list until it finds an item that is not disabled, and it will wrap\n   * if it encounters either end of the menu.\n   *\n   * @param delta the desired change in focus index\n   * @param menuItems the menu items that should be focused\n   * @private\n     */\n  private _updateFocusedItemIndex(delta: number, menuItems: MdMenuItem[] = this.items.toArray()) {\n    // when focus would leave menu, wrap to beginning or end\n    this._focusedItemIndex = (this._focusedItemIndex + delta + this.items.length)\n                              % this.items.length;\n\n    // skip all disabled menu items recursively until an active one\n    // is reached or the menu closes for overreaching bounds\n    while (menuItems[this._focusedItemIndex].disabled) {\n      this._updateFocusedItemIndex(delta, menuItems);\n    }\n  }\n\n  private _setPositionX(pos: MenuPositionX): void {\n    if ( pos !== 'before' && pos !== 'after') {\n      throw new MdMenuInvalidPositionX();\n    }\n    this.positionX = pos;\n  }\n\n  private _setPositionY(pos: MenuPositionY): void {\n    if ( pos !== 'above' && pos !== 'below') {\n      throw new MdMenuInvalidPositionY();\n    }\n    this.positionY = pos;\n  }\n}\n"],"sourceRoot":"/source/"}