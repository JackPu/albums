{"version":3,"sources":["menu/menu-item.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAC,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAC,MAAM,eAAe;AAEjF;;;GAGG;AAUH;IAGE,oBAAoB,SAAmB,EAAU,WAAuB;QAApD,cAAS,GAAT,SAAS,CAAU;QAAU,gBAAW,GAAX,WAAW,CAAY;IAAG,CAAC;IAE5E,0BAAK,GAAL;QACE,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IAC9E,CAAC;IAKD,sBAAI,gCAAQ;QAHZ,uCAAuC;aAGvC;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,SAAS,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QAC1E,CAAC;;;OAJA;IAOD,sBAAI,sCAAc;aAAlB;YACE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC;;;OAAA;IAED;;OAEG;IACH,mCAAc,GAAd,UAAe,KAAY;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IAvBD;QAAC,WAAW,CAAC,eAAe,CAAC;QAC5B,KAAK,EAAE;;8CAAA;IASR;QAAC,WAAW,CAAC,oBAAoB,CAAC;;oDAAA;IA7BpC;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,IAAI,EAAE;gBACJ,MAAM,EAAE,UAAU;gBAClB,SAAS,EAAE,wBAAwB;gBACnC,UAAU,EAAE,IAAI;aACjB;YACD,QAAQ,EAAE,YAAY;SACvB,CAAC;;kBAAA;IAmCF,iBAAC;AAAD,CAlCA,AAkCC,IAAA","file":"menu/menu-item.js","sourcesContent":["import {Directive, ElementRef, Input, HostBinding, Renderer} from '@angular/core';\n\n/**\n * This directive is intended to be used inside an md-menu tag.\n * It exists mostly to set the role attribute.\n */\n@Directive({\n  selector: '[md-menu-item]',\n  host: {\n    'role': 'menuitem',\n    '(click)': '_checkDisabled($event)',\n    'tabindex': '-1'\n  },\n  exportAs: 'mdMenuItem'\n})\nexport class MdMenuItem {\n  _disabled: boolean;\n\n  constructor(private _renderer: Renderer, private _elementRef: ElementRef) {}\n\n  focus(): void {\n    this._renderer.invokeElementMethod(this._elementRef.nativeElement, 'focus');\n  }\n\n  // this is necessary to support anchors\n  @HostBinding('attr.disabled')\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = (value === false || value === undefined) ? null : true;\n  }\n\n  @HostBinding('attr.aria-disabled')\n  get isAriaDisabled(): string {\n    return String(this.disabled);\n  }\n\n  /**\n   * TODO: internal\n   */\n  _checkDisabled(event: Event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n\n"],"sourceRoot":"/source/"}